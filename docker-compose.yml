version: '3.4'

services:
  postgresql:
    image: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - ./env/postgres.env
    restart: always

  coturn:
    build:
      context: ./build/coturn
      network: host
    image: myy/coturn:latest
    restart: always
    volumes:
      - ./coturn/conf/turnserver.conf:/etc/turnserver.conf:ro
      - ./coturn/data:/srv/coturn
      # You could use "docker secrets" instead
      # Be sure to edit ./coturn/conf/turnserver.conf afterwards
      #- ./ssl/privkey.pem:/etc/ssl/private/privkey.pem:ro
      #- ./ssl/cert.pem:/etc/ssl/certs/cert.pem:ro

  matrix:
    image: myy/synapse:latest-intel
    build:
      context: ./build/synapse
      network: host
    volumes:
      - ./matrix/conf:/etc/synapse
      - ./matrix/data:/data
    env_file:
      - ./env/postgres.env # Reuse the PostgreSQL configuration
    environment:
      - SYNAPSE_SERVER_NAME=NameOfYourMatrixServer
      - SYNAPSE_SERVER_ADDRESS=https://matrix.yourdomain.com
      - SYNAPSE_REPORT_STATS=yes # Can be set to "no"
      - SYNAPSE_DATABASE_BACKEND=postgresql # The backend name : postgresql or sqlite
      - SYNAPSE_POSTGRES_DBADDR=postgresql # The network alias we provided to our postgresql server
      # PostgreSQL configuration is inherited from the postgres.env env_file
      - SYNAPSE_VOIP_TURN_MAIN_URL=turn:turn.yourdomain.com:3478?transport=udp
      - SYNAPSE_VOIP_TURN_USERNAME=turn_username
      - SYNAPSE_VOIP_TURN_PASSWORD=turn_password

    depends_on:
      - postgresql # For the data
      - coturn     # For the VOIP
    restart: always

volumes:
  pgdata:

